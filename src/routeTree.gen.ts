/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProjectsRouteRouteImport } from './routes/projects/route'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProjectsIndexRouteImport } from './routes/projects/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as ProjectsChatbotLayoutRouteImport } from './routes/projects/_chatbot-layout'
import { Route as ProjectsProjectIdPlanReviewRouteImport } from './routes/projects_.$projectId.plan-review'
import { Route as ProjectsProjectIdReviewAndSubmitRouteImport } from './routes/projects/$projectId.review-and-submit'
import { Route as ProjectsChatbotLayoutProjectIdIndexRouteImport } from './routes/projects/_chatbot-layout/$projectId/index'
import { Route as ProjectsChatbotLayoutProjectIdIntakeFormRouteImport } from './routes/projects/_chatbot-layout/$projectId/intake-form'
import { ServerRoute as ApiChatServerRouteImport } from './routes/api/chat'
import { ServerRoute as ApiAddressesAutocompleteServerRouteImport } from './routes/api/addresses.autocomplete'

const rootServerRouteImport = createServerRootRoute()

const ProjectsRouteRoute = ProjectsRouteRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIndexRoute = ProjectsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProjectsRouteRoute,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const ProjectsChatbotLayoutRoute = ProjectsChatbotLayoutRouteImport.update({
  id: '/_chatbot-layout',
  getParentRoute: () => ProjectsRouteRoute,
} as any)
const ProjectsProjectIdPlanReviewRoute =
  ProjectsProjectIdPlanReviewRouteImport.update({
    id: '/projects_/$projectId/plan-review',
    path: '/projects/$projectId/plan-review',
    getParentRoute: () => rootRouteImport,
  } as any)
const ProjectsProjectIdReviewAndSubmitRoute =
  ProjectsProjectIdReviewAndSubmitRouteImport.update({
    id: '/$projectId/review-and-submit',
    path: '/$projectId/review-and-submit',
    getParentRoute: () => ProjectsRouteRoute,
  } as any)
const ProjectsChatbotLayoutProjectIdIndexRoute =
  ProjectsChatbotLayoutProjectIdIndexRouteImport.update({
    id: '/$projectId/',
    path: '/$projectId/',
    getParentRoute: () => ProjectsChatbotLayoutRoute,
  } as any)
const ProjectsChatbotLayoutProjectIdIntakeFormRoute =
  ProjectsChatbotLayoutProjectIdIntakeFormRouteImport.update({
    id: '/$projectId/intake-form',
    path: '/$projectId/intake-form',
    getParentRoute: () => ProjectsChatbotLayoutRoute,
  } as any)
const ApiChatServerRoute = ApiChatServerRouteImport.update({
  id: '/api/chat',
  path: '/api/chat',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAddressesAutocompleteServerRoute =
  ApiAddressesAutocompleteServerRouteImport.update({
    id: '/api/addresses/autocomplete',
    path: '/api/addresses/autocomplete',
    getParentRoute: () => rootServerRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/projects': typeof ProjectsChatbotLayoutRouteWithChildren
  '/dashboard/': typeof DashboardIndexRoute
  '/projects/': typeof ProjectsIndexRoute
  '/projects/$projectId/review-and-submit': typeof ProjectsProjectIdReviewAndSubmitRoute
  '/projects/$projectId/plan-review': typeof ProjectsProjectIdPlanReviewRoute
  '/projects/$projectId/intake-form': typeof ProjectsChatbotLayoutProjectIdIntakeFormRoute
  '/projects/$projectId': typeof ProjectsChatbotLayoutProjectIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/projects/$projectId/review-and-submit': typeof ProjectsProjectIdReviewAndSubmitRoute
  '/projects/$projectId/plan-review': typeof ProjectsProjectIdPlanReviewRoute
  '/projects/$projectId/intake-form': typeof ProjectsChatbotLayoutProjectIdIntakeFormRoute
  '/projects/$projectId': typeof ProjectsChatbotLayoutProjectIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/projects': typeof ProjectsRouteRouteWithChildren
  '/projects/_chatbot-layout': typeof ProjectsChatbotLayoutRouteWithChildren
  '/dashboard/': typeof DashboardIndexRoute
  '/projects/': typeof ProjectsIndexRoute
  '/projects/$projectId/review-and-submit': typeof ProjectsProjectIdReviewAndSubmitRoute
  '/projects_/$projectId/plan-review': typeof ProjectsProjectIdPlanReviewRoute
  '/projects/_chatbot-layout/$projectId/intake-form': typeof ProjectsChatbotLayoutProjectIdIntakeFormRoute
  '/projects/_chatbot-layout/$projectId/': typeof ProjectsChatbotLayoutProjectIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/projects'
    | '/dashboard/'
    | '/projects/'
    | '/projects/$projectId/review-and-submit'
    | '/projects/$projectId/plan-review'
    | '/projects/$projectId/intake-form'
    | '/projects/$projectId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/projects'
    | '/dashboard'
    | '/projects/$projectId/review-and-submit'
    | '/projects/$projectId/plan-review'
    | '/projects/$projectId/intake-form'
    | '/projects/$projectId'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/projects'
    | '/projects/_chatbot-layout'
    | '/dashboard/'
    | '/projects/'
    | '/projects/$projectId/review-and-submit'
    | '/projects_/$projectId/plan-review'
    | '/projects/_chatbot-layout/$projectId/intake-form'
    | '/projects/_chatbot-layout/$projectId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  ProjectsRouteRoute: typeof ProjectsRouteRouteWithChildren
  ProjectsProjectIdPlanReviewRoute: typeof ProjectsProjectIdPlanReviewRoute
}
export interface FileServerRoutesByFullPath {
  '/api/chat': typeof ApiChatServerRoute
  '/api/addresses/autocomplete': typeof ApiAddressesAutocompleteServerRoute
}
export interface FileServerRoutesByTo {
  '/api/chat': typeof ApiChatServerRoute
  '/api/addresses/autocomplete': typeof ApiAddressesAutocompleteServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/chat': typeof ApiChatServerRoute
  '/api/addresses/autocomplete': typeof ApiAddressesAutocompleteServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/chat' | '/api/addresses/autocomplete'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/chat' | '/api/addresses/autocomplete'
  id: '__root__' | '/api/chat' | '/api/addresses/autocomplete'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiChatServerRoute: typeof ApiChatServerRoute
  ApiAddressesAutocompleteServerRoute: typeof ApiAddressesAutocompleteServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/': {
      id: '/projects/'
      path: '/'
      fullPath: '/projects/'
      preLoaderRoute: typeof ProjectsIndexRouteImport
      parentRoute: typeof ProjectsRouteRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/projects/_chatbot-layout': {
      id: '/projects/_chatbot-layout'
      path: ''
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsChatbotLayoutRouteImport
      parentRoute: typeof ProjectsRouteRoute
    }
    '/projects_/$projectId/plan-review': {
      id: '/projects_/$projectId/plan-review'
      path: '/projects/$projectId/plan-review'
      fullPath: '/projects/$projectId/plan-review'
      preLoaderRoute: typeof ProjectsProjectIdPlanReviewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$projectId/review-and-submit': {
      id: '/projects/$projectId/review-and-submit'
      path: '/$projectId/review-and-submit'
      fullPath: '/projects/$projectId/review-and-submit'
      preLoaderRoute: typeof ProjectsProjectIdReviewAndSubmitRouteImport
      parentRoute: typeof ProjectsRouteRoute
    }
    '/projects/_chatbot-layout/$projectId/': {
      id: '/projects/_chatbot-layout/$projectId/'
      path: '/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProjectsChatbotLayoutProjectIdIndexRouteImport
      parentRoute: typeof ProjectsChatbotLayoutRoute
    }
    '/projects/_chatbot-layout/$projectId/intake-form': {
      id: '/projects/_chatbot-layout/$projectId/intake-form'
      path: '/$projectId/intake-form'
      fullPath: '/projects/$projectId/intake-form'
      preLoaderRoute: typeof ProjectsChatbotLayoutProjectIdIntakeFormRouteImport
      parentRoute: typeof ProjectsChatbotLayoutRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/chat': {
      id: '/api/chat'
      path: '/api/chat'
      fullPath: '/api/chat'
      preLoaderRoute: typeof ApiChatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/addresses/autocomplete': {
      id: '/api/addresses/autocomplete'
      path: '/api/addresses/autocomplete'
      fullPath: '/api/addresses/autocomplete'
      preLoaderRoute: typeof ApiAddressesAutocompleteServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface DashboardRouteRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

interface ProjectsChatbotLayoutRouteChildren {
  ProjectsChatbotLayoutProjectIdIntakeFormRoute: typeof ProjectsChatbotLayoutProjectIdIntakeFormRoute
  ProjectsChatbotLayoutProjectIdIndexRoute: typeof ProjectsChatbotLayoutProjectIdIndexRoute
}

const ProjectsChatbotLayoutRouteChildren: ProjectsChatbotLayoutRouteChildren = {
  ProjectsChatbotLayoutProjectIdIntakeFormRoute:
    ProjectsChatbotLayoutProjectIdIntakeFormRoute,
  ProjectsChatbotLayoutProjectIdIndexRoute:
    ProjectsChatbotLayoutProjectIdIndexRoute,
}

const ProjectsChatbotLayoutRouteWithChildren =
  ProjectsChatbotLayoutRoute._addFileChildren(
    ProjectsChatbotLayoutRouteChildren,
  )

interface ProjectsRouteRouteChildren {
  ProjectsChatbotLayoutRoute: typeof ProjectsChatbotLayoutRouteWithChildren
  ProjectsIndexRoute: typeof ProjectsIndexRoute
  ProjectsProjectIdReviewAndSubmitRoute: typeof ProjectsProjectIdReviewAndSubmitRoute
}

const ProjectsRouteRouteChildren: ProjectsRouteRouteChildren = {
  ProjectsChatbotLayoutRoute: ProjectsChatbotLayoutRouteWithChildren,
  ProjectsIndexRoute: ProjectsIndexRoute,
  ProjectsProjectIdReviewAndSubmitRoute: ProjectsProjectIdReviewAndSubmitRoute,
}

const ProjectsRouteRouteWithChildren = ProjectsRouteRoute._addFileChildren(
  ProjectsRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  ProjectsRouteRoute: ProjectsRouteRouteWithChildren,
  ProjectsProjectIdPlanReviewRoute: ProjectsProjectIdPlanReviewRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiChatServerRoute: ApiChatServerRoute,
  ApiAddressesAutocompleteServerRoute: ApiAddressesAutocompleteServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
